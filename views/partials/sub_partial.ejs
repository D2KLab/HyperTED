<div class="container-fluid">

    <div class="row">
        <div class="col-md-12 col-lg-12 col-sm-12 col-xs-12">
            <%
            if (metadata && metadata.timedtext) {
                var strList = metadata.timedtext.split('\n\n'), subList = [];
                if (strList.length < 2) {
                    strList = metadata.timedtext.substr(1).split('\n\r');
                }
                var charIndex = -1;
            %>
            <div class="sub-text <% if (locals.enriched) { %>enriched<% } %>">
                <%
                    function calcTime(subTime) {
                        var time = (subTime.split(":"));
                        var hh = parseInt(time[0]);
                        var mm = parseInt(time[1]);
                        var ss = parseFloat(time[2].replace(",", "."));

                        return ((mm * 60) + (hh * 3600) + ss);
                    }


                    for (var index in strList) {
                        var sub = {text: '', lineNum: 0};
                        var lines = strList[index].split('\n');

                        for (var line in lines) {
                            if (!sub.id) {
                                sub.id = lines[line];
                            } else if (!sub.time) {
                                sub.time = lines[line].replace('\r', '');
                                var timeSplit = sub.time.split(' --> ')
                                var subStart = calcTime(timeSplit[0]);
                                sub.startSS = Math.round(subStart * 1000) / 1000;
                                var subEnd = calcTime(timeSplit[1]);
                                sub.endSS = Math.round(subEnd * 1000) / 1000;
                            } else {
                                var start = sub.lineNum > 0 ? '\n' : '';
                                sub.text += start + lines[line];
                                sub.lineNum++;
                            }
                        }

                        sub.startChar = charIndex + 1;
                        charIndex = sub.startChar + sub.text.length; //because of a '\n' is a fake double char
                        sub.endChar = charIndex;
                        subList.push(sub);
                    }


                    var subIndex;
                    if (locals.enriched && locals.entities) {
                        var entityList = entities;

                        //sorting JSON for end character desc and by length
                        entityList.sort(/**
                         * @return {number}
                         */
                                function SortByEndTime(x, y) {
                            if (x.endNPT == y.endNPT) {
                                return ((x.label.length == y.label.length) ? 0 : (x.label.length < y.label.length) ? 1 : -1)
                            } else if (parseFloat(x.endNPT) > parseFloat(y.endNPT)) return -1;
                            else return 1;
                        });

                        subIndex = subList.length - 1;
                        entityList.forEach(function (entity) {
                            while (subIndex >= 0) {

                                var thisSub = subList[subIndex];
                                if (!thisSub.id || thisSub.id == '') {
                                    subIndex--;
                                } else {
                                    var entStart = parseFloat(entity.startNPT)
                                    var entEnd = parseFloat(entity.endNPT);

                                    if (entStart >= thisSub.startSS && entEnd <= thisSub.endSS) {

                                        var text = thisSub.text;
                                        var nerdTypeSplit = entity.nerdType.split('#');
                                        var nerdType = nerdTypeSplit.length > 1 ? nerdTypeSplit[1].toLowerCase() : "thing";

                                        var str = '<span class="entity ' + nerdType + '">' + entity.label + '</span>';

                                        thisSub.text = text.replace(entity.label, str);
                                        break;
                                    } else {
                                        subIndex--;
                                    }
                                }
                            }

                        });
                    }

                    if (locals.chapters) {
                        var chapterList = chapters;

                        subIndex = 0;
                        chapterList.forEach(function (chap) {
                            var chapStart = Math.round(chap.tStart.value), chapEnd = Math.round(chap.tEnd.value);
                            while (subIndex < subList.length) {
                                var thisSub = subList[subIndex];
                                if (!thisSub.id || thisSub.id == '') {
                                    subIndex++;
                                } else {
                                    var sStart = Math.round(thisSub.startSS), sEnd = Math.round(thisSub.endSS)

                                    if (chapStart > sEnd) {
                                        //chapter not yet started: go next sub
                                        subIndex++;
                                    } else if (chapStart <= sEnd && chapEnd >= sEnd) {
                                        //we are in a chapter: save this info and go next sub
                                        thisSub.dataChap = ' data-chapter=' + chap.chapter.value.replace("http://data.linkedtv.eu/chapter/", "");
                                        subIndex++;
                                    } else {
                                        //chapter ends: go next chapter
                                        if (subIndex > 0)
                                            subList[subIndex - 1].endChap = true;
                                        return;
                                    }
                                }
                            }

                        });
                    }

                    var newChap = true;
                        subList.forEach(function(sub){
                        if (sub.dataChap && newChap) {
                    newChap = false;
                %>
                <div class="subChapGroup" <%= sub.dataChap %>>
                    <%
                    }
                    %>
                    <p id="sub<%= sub.id %>" data-time="<%= sub.time %>" data-startSS="<%= sub.startSS %>"
                       data-endSS="<%= sub.endSS %>" <%= sub.dataChap || "" %>><%- sub.text %></p>
                    <%
                    if(sub.endChap){
                        newChap = true;
                    %>
                </div>
                <%
                }
                }); %>
            </div>
            <% } %>
        </div>
    </div>
</div>