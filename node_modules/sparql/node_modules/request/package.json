{
  "name": "request",
  "description": "Simplified HTTP request client.",
  "tags": [
    "http",
    "simple",
    "util",
    "utility"
  ],
  "version": "1.9.0",
  "author": {
    "name": "Mikeal Rogers",
    "email": "mikeal.rogers@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/mikeal/request.git"
  },
  "bugs": {
    "url": "http://github.com/mikeal/request/issues"
  },
  "engines": [
    "node >= 0.3.6"
  ],
  "main": "./main",
  "readme": "# Request -- Simplified HTTP request method\n\n## Install\n\n<pre>\n  npm install request\n</pre>\n\nOr from source:\n\n<pre>\n  git clone git://github.com/mikeal/request.git \n  cd request\n  npm link .\n</pre>\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It support HTTPS and follows redirects by default.\n\n#### request(options, callback)\n\nThe first argument is an options object. The only required option is uri, all others are optional.\n\n* `uri` || `url` - fully qualified uri or a parsed url object from url.parse()\n* `method` - http method, defaults to GET\n* `headers` - http headers, defaults to {}\n* `body` - entity body for POST and PUT requests. Must be buffer or string.\n* `json` - sets `body` but to JSON representation of value and adds `Content-type: application/json` header.\n* `multipart` - (experimental) array of objects which contains their own headers and `body` attribute. Sends `multipart/related` request. See example below.\n* `client` - existing http client object (when undefined a new one will be created and assigned to this property so you can keep around a reference to it if you would like use keep-alive on later request)\n* `followRedirect` - follow HTTP 3xx responses as redirects. defaults to true.\n* `maxRedirects` - the maximum number of redirects to follow, defaults to 10.\n* `onResponse` - If true the callback will be fired on the \"response\" event instead of \"end\". If a function it will be called on \"response\" and not effect the regular semantics of the main callback on \"end\".\n* `encoding` - Encoding to be used on response.setEncoding when buffering the response data.\n* `requestBodyStream` - Stream to read request body chunks from. \n* `responseBodyStream` - Stream to write body chunks to. When set this option will be passed as the last argument to the callback instead of the entire body.\n\nThe callback argument gets 3 arguments. The first is an error when applicable (usually from the http.Client option not the http.ClientRequest object). The second in an http.ClientResponse object. The third is the response body buffer.\n\nExamples:\n<pre>\n  var request = require('request');\n  request({uri:'http://www.google.com'}, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      sys.puts(body) // Print the google web page.\n    }\n  })\n</pre>\n\n<pre>\n  var request = require('request');\n  var rand = Math.floor(Math.random()*100000000).toString();\n  request(\n    { method: 'PUT'\n    , uri: 'http://mikeal.couchone.com/testjs/' + rand\n    , multipart: \n      [ { 'content-type': 'application/json'\n        ,  body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        }\n      , { body: 'I am an attachment' }\n      ] \n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log('document saved as: http://mikeal.couchone.com/testjs/'+ rand);\n      } else {\n        console.log('error: '+ response.statusCode);\n        console.log(body);\n      }\n    }\n  )\n</pre>\n\nIt's also worth noting that the options argument will mutate. When following a redirect the uri values will change. After setting up client options it will set options.client.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/mikeal/request",
  "_id": "request@1.9.0",
  "dist": {
    "shasum": "08967672ca56d4751b2e8b579d06d6f20d515fa9"
  },
  "_from": "request@1.9.0",
  "_resolved": "https://registry.npmjs.org/request/-/request-1.9.0.tgz"
}
